---
import type { CompanyData } from '../utils/csvLoader';

interface Props {
  company: CompanyData;
}

const { company } = Astro.props;

// Generate a simple rating (in a real app, this would come from actual reviews)
const rating = Math.min(5, Math.max(3.5, 4 + Math.random() * 1));
---

<div class="location-company-card hover-lift">
  <div class="card-header">
    <div class="company-info">
      <h3 class="company-name">
        <a href={company.website} target="_blank" rel="noopener noreferrer">
          {company.companyName}
        </a>
      </h3>
      <div class="company-meta">
        <span class="meta-item">
          <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/>
            <circle cx="12" cy="10" r="3"/>
          </svg>
          {company.city}{company.isUS ? `, ${company.country}` : `, ${company.country}`}
        </span>
        {company.hourlyRate && (
          <span class="meta-item">
            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <line x1="12" y1="1" x2="12" y2="23"/>
              <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
            </svg>
            {company.hourlyRate}
          </span>
        )}
        {company.numberOfEmployees && (
          <span class="meta-item">
            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"/>
              <circle cx="9" cy="7" r="4"/>
              <path d="M23 21v-2a4 4 0 0 0-3-3.87"/>
              <path d="M16 3.13a4 4 0 0 1 0 7.75"/>
            </svg>
            {company.numberOfEmployees} employees
          </span>
        )}
      </div>
    </div>
    <div class="rating-badge">
      <div class="stars">
        {Array.from({ length: 5 }, (_, i) => (
          <span class={i < Math.floor(rating) ? 'star filled' : 'star'}>â˜…</span>
        ))}
      </div>
      <span class="rating-text">{rating.toFixed(1)}</span>
    </div>
  </div>
  
  <p class="description">
    {company.longDescription.length > 200 
      ? company.longDescription.substring(0, 200) + '...' 
      : company.longDescription}
  </p>
  
  {company.services.length > 0 && (
    <div class="services">
      <h4 class="services-title">Services:</h4>
      <div class="services-grid">
        {company.services.slice(0, 6).map(service => (
          <span class="service-tag">{service}</span>
        ))}
        {company.services.length > 6 && (
          <span class="service-count">+{company.services.length - 6} more</span>
        )}
      </div>
    </div>
  )}
  
  <div class="card-footer">
    <a href={company.website} target="_blank" rel="noopener noreferrer" class="btn btn-primary">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"/>
        <polyline points="15,3 21,3 21,9"/>
        <line x1="10" y1="14" x2="21" y2="3"/>
      </svg>
      Visit Website
    </a>
  </div>
</div>

<style>
  .location-company-card {
    background: white;
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: var(--shadow-md);
    border: 1px solid var(--neutral-200);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .location-company-card:hover {
    border-color: var(--primary-light);
  }

  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1rem;
    gap: 1rem;
  }

  .company-info {
    flex: 1;
  }

  .company-name {
    margin: 0 0 0.5rem 0;
    font-size: 1.25rem;
    font-weight: 600;
    line-height: 1.3;
  }

  .company-name a {
    color: var(--neutral-800);
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .company-name a:hover {
    color: var(--primary);
  }

  .company-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    margin-bottom: 0.5rem;
  }

  .meta-item {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    color: var(--neutral-500);
    font-size: 0.85rem;
    font-weight: 500;
  }

  .meta-item svg {
    color: var(--primary);
  }

  .rating-badge {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.25rem;
    background: var(--neutral-50);
    padding: 0.5rem;
    border-radius: 8px;
    border: 1px solid var(--neutral-200);
    min-width: 60px;
  }

  .stars {
    display: flex;
    gap: 1px;
  }

  .star {
    color: var(--neutral-300);
    font-size: 0.875rem;
  }

  .star.filled {
    color: #fbbf24;
  }

  .rating-text {
    font-size: 0.75rem;
    font-weight: 600;
    color: var(--neutral-700);
  }

  .description {
    color: var(--neutral-600);
    margin-bottom: 1rem;
    line-height: 1.5;
    font-size: 0.9rem;
  }

  .services {
    margin-bottom: 1rem;
  }

  .services-title {
    margin: 0 0 0.5rem 0;
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--neutral-700);
  }

  .services-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 0.375rem;
  }

  .service-tag {
    background: var(--primary-light);
    color: var(--primary-dark);
    padding: 0.25rem 0.5rem;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 500;
  }

  .service-count {
    background: var(--neutral-200);
    color: var(--neutral-600);
    padding: 0.25rem 0.5rem;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 500;
  }

  .card-footer {
    border-top: 1px solid var(--neutral-200);
    padding-top: 1rem;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    font-weight: 500;
    font-size: 0.875rem;
    text-decoration: none;
    transition: all 0.3s ease;
    cursor: pointer;
    border: none;
  }

  .btn-primary {
    background: var(--gradient-primary);
    color: white;
    box-shadow: var(--shadow-sm);
  }

  .btn-primary:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }

  @media (max-width: 768px) {
    .card-header {
      flex-direction: column;
      align-items: stretch;
    }

    .rating-badge {
      align-self: flex-end;
      flex-direction: row;
      gap: 0.5rem;
      min-width: auto;
    }

    .company-meta {
      flex-direction: column;
      gap: 0.5rem;
    }
  }
</style>